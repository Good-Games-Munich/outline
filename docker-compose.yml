# This file serves as the base to build on top on.
version: "3.8"
services:
  # https://hub.docker.com/_/postgres
  postgres:
    # https://hub.docker.com/_/postgres/tags
    image: postgres:16.4-alpine

    # https://www.baeldung.com/ops/docker-compose-restart-policies
    restart: always

    # Default postgres port. This line is not here to configure something. It is more of a reminder so chaning it will do nothing
    ports:
      - 5432

    # https://docs.docker.com/compose/environment-variables/set-environment-variables/
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD?Missing environment variable see readme}
      POSTGRES_USER: outline
      POSTGRES_DB: outline
      PGDATA: /var/lib/postgresql/data/pgdata

    # https://docs.docker.com/storage/volumes/
    # Define a named volume to persist data
    volumes:
      - outlinePostgressData:/var/lib/postgresql/data/pgdata

  # https://hub.docker.com/_/redis
  redis:
    # https://hub.docker.com/_/redis/tags
    image: redis:7.0-alpine

    # https://www.baeldung.com/ops/docker-compose-restart-policies
    restart: always

    # Default redis port. This line is not here to configure something. It is more of a reminder so chaning it will do nothing
    ports:
      - 6379

  # https://hub.docker.com/r/outlinewiki/outline
  outline:
    # https://hub.docker.com/r/outlinewiki/outline/tags
    image: outlinewiki/outline:0.75.2

    # https://www.baeldung.com/ops/docker-compose-restart-policies
    restart: always

    # Default outline port. This line is not here to configure something. It is more of a reminder so chaning it will do nothing
    ports:
      - 3000

    # https://docs.getoutline.com/s/hosting/doc/docker-7pfeLP5a8t
    # Configurations: https://github.com/outline/outline/blob/main/.env.sample
    # All configs should be set here as environment variable
    environment:
      # hex-encoded 32-byte random key. Run 'openssl rand -hex 32' to get one
      SECRET_KEY: ${SECRET_KEY?Missing environment variable see readme}
      # hex-encoded 32-byte random key. Run 'openssl rand -hex 32' to get one
      UTILS_SECRET: ${UTILS_SECRET?Missing environment variable see readme}
      # DB URL with protocol://username:password@host:port/db_name. Host makes use of https://docs.docker.com/compose/networking/
      DATABASE_URL: postgres://outline:${POSTGRES_PASSWORD}@postgres:5432/outline
      # The db does not use ssl so we disable it
      PGSSLMODE: disable
      # Redis url with protocol://host:port. Host makes use of https://docs.docker.com/compose/networking/
      REDIS_URL: redis://redis:6379
      # Disable force https since our reverse proxy will handle it
      FORCE_HTTPS: 0
      # Set the log level to get a bit more info
      LOG_LEVEL: info
      # Set default ui language. See https://translate.getoutline.com for a list
      DEFAULT_LANGUAGE: de_DE
      # Enable the rate limiter
      RATE_LIMITER_ENABLED: 1
      # Set the limiter to 1000 requests in a 60 duration window
      RATE_LIMITER_REQUESTS: 1000
      RATE_LIMITER_DURATION_WINDOW: 60
      FILE_STORAGE: local
      FILE_STORAGE_UPLOAD_MAX_SIZE: 26214400

      # OIDC config for discord. Follow https://fusionauth.io/docs/v1/tech/identity-providers/openid-connect/discord for a rough tutorial
      # The redirect url is: (http|https)://{url}/auth/oidc.callback
      # Client id from: https://discord.com/developers/applications/ > Click your application > OAuth2 > 'APPLICATION ID'
      OIDC_CLIENT_ID: ${DISCORD_APP_ID?Missing environment variable see readme}
      # Client secret from: https://discord.com/developers/applications/ > Click your application > OAuth2 > 'CLIENT SECRET'
      OIDC_CLIENT_SECRET: ${DISCORD_APP_SECRET?Missing environment variable see readme}
      OIDC_AUTH_URI: https://discord.com/api/oauth2/authorize
      OIDC_TOKEN_URI: https://discord.com/api/oauth2/token
      OIDC_USERINFO_URI: https://discord.com/api/users/@me
      # JSON path from where to get the username. See https://discord.com/developers/docs/resources/user
      OIDC_USERNAME_CLAIM: username
      # Display name to show in UI
      OIDC_DISPLAY_NAME: Discord
      # Scopes to request from discord
      OIDC_SCOPES: identify email

      # https://docs.getoutline.com/s/hosting/doc/smtp-cqCJyZGMIB
      SMTP_HOST: ${SMTP_HOST?Missing environment variable see readme}
      SMTP_PORT: ${SMTP_PORT?Missing environment variable see readme}
      SMTP_USERNAME: ${SMTP_USERNAME?Missing environment variable see readme}
      SMTP_PASSWORD: ${SMTP_PASSWORD?Missing environment variable see readme}
      SMTP_FROM_EMAIL: ${SMTP_FROM_EMAIL?Missing environment variable see readme}
      SMTP_REPLY_EMAIL: ${SMTP_REPLY_EMAIL-}
      SMTP_TLS_CIPHERS: ${SMTP_TLS_CIPHERS-}
      SMTP_SECURE: ${SMTP_TLS_CIPHERS-1}

    # https://docs.docker.com/storage/volumes/
    # Define a named volume to persist data
    volumes:
      - outlineData:/var/lib/outline/data

    # https://docs.docker.com/compose/compose-file/05-services/#depends_on
    depends_on:
      - postgres
      - redis

# https://docs.docker.com/storage/volumes/
volumes:
  outlineData:
  outlinePostgressData:
